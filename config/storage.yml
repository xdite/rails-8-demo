test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Use bin/rails credentials:edit to set the AWS secrets (as aws:access_key_id|secret_access_key)
# Or use environment variables for Zeabur deployment
amazon:
  service: S3
  access_key_id: <%= ENV['AWS_ACCESS_KEY_ID'] || Rails.application.credentials.dig(:aws, :access_key_id) %>
  secret_access_key: <%= ENV['AWS_SECRET_ACCESS_KEY'] || Rails.application.credentials.dig(:aws, :secret_access_key) %>
  region: <%= ENV['AWS_REGION'] || 'us-east-1' %>
  bucket: <%= ENV['AWS_BUCKET'] || "your_own_bucket-#{Rails.env}" %>

# Remember not to checkin your GCS keyfile to a repository
# Use environment variables for Zeabur deployment
google:
  service: GCS
  project: <%= ENV['GCS_PROJECT'] || Rails.application.credentials.dig(:gcs, :project) %>
  credentials: <%= ENV['GOOGLE_APPLICATION_CREDENTIALS'] || Rails.root.join("path/to/gcs.keyfile") %>
  bucket: <%= ENV['GCS_BUCKET'] || "your_own_bucket-#{Rails.env}" %>

# Use bin/rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
microsoft:
  service: AzureStorage
  storage_account_name: <%= ENV['AZURE_STORAGE_ACCOUNT_NAME'] || Rails.application.credentials.dig(:azure_storage, :storage_account_name) %>
  storage_access_key: <%= ENV['AZURE_STORAGE_ACCESS_KEY'] || Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
  container: <%= ENV['AZURE_CONTAINER'] || "your_container_name-#{Rails.env}" %>

# Mirror service for redundancy (optional)
mirror:
  service: Mirror
  primary: local
  mirrors: [ amazon, google, microsoft ]
